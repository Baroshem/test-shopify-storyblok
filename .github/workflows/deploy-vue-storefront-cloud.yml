name: Deploy to Vue Storefront Cloud
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Make .env file
        shell: bash
        run: printf "
          SHOPIFY_STOREFRONT_TOKEN=${{ secrets.SHOPIFY_STOREFRONT_TOKEN }}\n
          SHOPIFY_DOMAIN=${{ secrets.SHOPIFY_DOMAIN }}\n
          STORYBLOK_TOKEN=${{ secrets.STORYBLOK_TOKEN }}\n
          " > .env
      - name: Build and publish docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ${{ secrets.PROJECT_NAME }}-storefrontcloud-io/vue-storefront:${{ github.sha }}
          registry: registry.vuestorefront.cloud
          username: ${{ secrets.CLOUD_USERNAME }}
          password: ${{ secrets.CLOUD_PASSWORD }}
          dockerfile: .vuestorefrontcloud/docker/Dockerfile
          buildoptions: "--compress"
          buildargs: NPM_EMAIL,NPM_PASS,NPM_USER,NPM_REGISTRY
        env:
          NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
          NPM_PASS: ${{ secrets.NPM_PASS }}
          NPM_USER: ${{ secrets.NPM_USER }}
          NPM_REGISTRY: "https://registrynpm.storefrontcloud.io"
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          target_url: https://${{ secrets.PROJECT_NAME }}.${{ secrets.CLOUD_REGION }}.gcp.storefrontcloud.io
          environment: production
          initial_status: in_progress
      - name: Deploy on ${{ secrets.PROJECT_NAME }}.${{ secrets.CLOUD_REGION }}.gcp.storefrontcloud.io
        if: github.ref == 'refs/heads/main'
        run: |
          curl --location --request PATCH 'https://api.platform.vuestorefront.io/cloud/instances/deploy' --header 'Content-Type: application/json' --data-raw '{ "cloudUserId": "${{ secrets.CLOUD_USERNAME }}", "cloudUserPassword": "${{ secrets.CLOUD_PASSWORD }}", "versionHash": "${{ github.sha }}", "projectName": "${{ secrets.PROJECT_NAME }}", "cloudRegion": "${{ secrets.CLOUD_REGION }}" }'
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://${{ secrets.PROJECT_NAME }}.${{ secrets.CLOUD_REGION }}.gcp.storefrontcloud.io
          state: "success"
          description: Congratulations! The deploy is done.
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://${{ secrets.PROJECT_NAME }}.${{ secrets.CLOUD_REGION }}.gcp.storefrontcloud.io
          description: Unfortunately, the instance hasn't been updated.
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
